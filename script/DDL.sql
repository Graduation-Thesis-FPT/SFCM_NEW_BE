-- Create Database (uncomment if needed)
-- CREATE DATABASE YourDatabaseName;
-- GO
-- USE YourDatabaseName;
-- GO

-- Create Tables
CREATE TABLE [VOYAGE] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [VESSEL_NAME] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [ETA] DATETIME NOT NULL,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [VOYAGE_CONTAINER] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [VOYAGE_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CNTR_NO] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [SHIPPER_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CNTR_SIZE] INT NOT NULL CHECK ([CNTR_SIZE] IN (20, 40, 45)),
    [SEAL_NO] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [STATUS] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL CHECK ([STATUS] IN ('PENDING', 'IMPORTED')),
    [NOTE] NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [VOYAGE_CONTAINER_PACKAGE] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [VOYAGE_CONTAINER_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [HOUSE_BILL] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [PACKAGE_TYPE_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CONSIGNEE_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [PACKAGE_UNIT] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CBM] FLOAT NOT NULL,
    [TOTAL_ITEMS] INT NOT NULL,
    [NOTE] NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [TIME_IN] DATETIME,
    [STATUS] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL CHECK ([STATUS] IN ('IN_CONTAINER', 'ALLOCATING', 'IN_WAREHOUSE', 'OUT_FOR_DELIVERY')),
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [PACKAGE_CELL_ALLOCATION] (
    [ROWGUID] UNIQUEIDENTIFIER PRIMARY KEY NOT NULL DEFAULT NEWID(),
    [VOYAGE_CONTAINER_PACKAGE_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CELL_ID] UNIQUEIDENTIFIER,
    [ITEMS_IN_CELL] INT,
    [SEQUENCE] INT,
    [NOTE] NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [SEPARATED_PACKAGE_LENGTH] FLOAT,
    [SEPARATED_PACKAGE_WIDTH] FLOAT,
    [SEPARATED_PACKAGE_HEIGHT] FLOAT,
    [IS_SEPARATED] BIT NOT NULL DEFAULT 0,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [CELL] (
    [ROWGUID] UNIQUEIDENTIFIER PRIMARY KEY NOT NULL DEFAULT NEWID(),
    [BLOCK_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [TIER_ORDERED] INT,
    [SLOT_ORDERED] INT,
    [CELL_LENGTH] FLOAT NOT NULL,
    [CELL_WIDTH] FLOAT NOT NULL,
    [CELL_HEIGHT] FLOAT NOT NULL,
    [IS_FILLED] BIT NOT NULL DEFAULT 0,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [BLOCK] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [NAME] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [WAREHOUSE_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [TOTAL_TIERS] INT,
    [TOTAL_CELLS] INT,
    [BLOCK_LENGTH] FLOAT NOT NULL,
    [BLOCK_WIDTH] FLOAT NOT NULL,
    [BLOCK_HEIGHT] FLOAT NOT NULL,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [WAREHOUSE] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [NAME] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [USER] (
    [USERNAME] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [PASSWORD] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [ROLE_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [FULLNAME] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [BIRTHDAY] DATETIME,
    [ADDRESS] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [TELEPHONE] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [EMAIL] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [IS_ACTIVE] BIT NOT NULL DEFAULT 1,
    [REMARK] NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [ROLE] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [NAME] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [ROLE_PERMISSION] (
    [ROWGUID] UNIQUEIDENTIFIER PRIMARY KEY NOT NULL DEFAULT NEWID(),
    [ROLE_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [MENU_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CAN_VIEW] BIT NOT NULL DEFAULT 0,
    [CAN_ADD_NEW] BIT NOT NULL DEFAULT 0,
    [CAN_MODIFY] BIT NOT NULL DEFAULT 0,
    [CAN_DELETE] BIT NOT NULL DEFAULT 0,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [MENU] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [PARENT_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [NAME] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [IS_VISIBLE] BIT NOT NULL DEFAULT 1,
    [PAGE_COMPONENT] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [MENU_ICON] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [ORDER_BY] INT,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [CUSTOMER] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [USERNAME] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS UNIQUE NOT NULL,
    -- [EMAIL] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CUSTOMER_TYPE] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL CHECK ([CUSTOMER_TYPE] IN ('SHIPPER', 'CONSIGNEE')),
    -- [CUSTOMER_NAME] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [TAX_CODE] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    -- [ADDRESS] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    -- [IS_ACTIVE] BIT NOT NULL DEFAULT 1,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [IMPORT_ORDER] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [PAYMENT_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [NOTE] NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [STATUS] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL CHECK ([STATUS] IN ('COMPLETED', 'CANCELLED')),
    [CAN_CANCEL] BIT NOT NULL DEFAULT 1,
    [CANCEL_NOTE] NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [IMPORT_ORDER_DETAIL] (
    [ROWGUID] UNIQUEIDENTIFIER PRIMARY KEY NOT NULL DEFAULT NEWID(),
    [ORDER_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [VOYAGE_CONTAINER_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CONTAINER_TARIFF_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [NOTE] NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [IMPORT_ORDER_PAYMENT] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [PRE_VAT_AMOUNT] FLOAT NOT NULL,
    [VAT_AMOUNT] FLOAT NOT NULL,
    [TOTAL_AMOUNT] FLOAT NOT NULL,
    [STATUS] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL CHECK ([STATUS] IN ('PENDING', 'PAID', 'CANCELLED')),
    [CANCEL_DATE] DATETIME,
    [CANCEL_REMARK] NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [CANCELLED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [EXPORT_ORDER] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [PAYMENT_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [PACKAGE_TARIFF_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [PICKUP_DATE] DATETIME NOT NULL,
    [NOTE] NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [CAN_CANCEL] BIT NOT NULL DEFAULT 1,
    [STATUS] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL CHECK ([STATUS] IN ('COMPLETED', 'CANCELLED')),
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [EXPORT_ORDER_DETAIL] (
    [ROWGUID] UNIQUEIDENTIFIER PRIMARY KEY NOT NULL DEFAULT NEWID(),
    [ORDER_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [VOYAGE_CONTAINER_PACKAGE_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CBM] FLOAT NOT NULL,
    [TOTAL_DAYS] INT NOT NULL DEFAULT 1,
    [NOTE] NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [EXPORT_ORDER_PAYMENT] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [PRE_VAT_AMOUNT] FLOAT NOT NULL,
    [VAT_AMOUNT] FLOAT NOT NULL,
    [TOTAL_AMOUNT] FLOAT NOT NULL,
    [STATUS] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL CHECK ([STATUS] IN ('PENDING', 'PAID', 'CANCELLED')),
    [CANCEL_DATE] DATETIME,
    [CANCEL_REMARK] NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [CANCELLED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [PACKAGE_TYPE] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [NAME] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [PACKAGE_TARIFF] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [NAME] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [VALID_FROM] DATETIME NOT NULL,
    [VALID_UNTIL] DATETIME NOT NULL,
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [PACKAGE_TARIFF_DETAIL] (
    [ROWGUID] UNIQUEIDENTIFIER PRIMARY KEY NOT NULL DEFAULT NEWID(),
    [PACKAGE_TARIFF_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [PACKAGE_TYPE_ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [PACKAGE_TARIFF_DESCRIPTION] NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CS_AS,
    [UNIT] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UNIT_PRICE] FLOAT NOT NULL,
    [VAT_RATE] FLOAT NOT NULL,
    [STATUS] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS CHECK ([STATUS] IN ('ACTIVE', 'INACTIVE')),
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE [CONTAINER_TARIFF] (
    [ID] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS PRIMARY KEY NOT NULL,
    [NAME] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CNTR_SIZE] INT NOT NULL CHECK ([CNTR_SIZE] IN (20, 40, 45)),
    [UNIT_PRICE] FLOAT NOT NULL,
    [VAT_RATE] FLOAT NOT NULL,
    [VALID_FROM] DATETIME NOT NULL,
    [VALID_UNTIL] DATETIME NOT NULL,
    [STATUS] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS CHECK ([STATUS] IN ('ACTIVE', 'INACTIVE')),
    [CREATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [CREATED_AT] DATETIME NOT NULL DEFAULT GETDATE(),
    [UPDATED_BY] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
    [UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE()
);

-- Add Foreign Key Constraints
ALTER TABLE [VOYAGE_CONTAINER] ADD CONSTRAINT FK_VOYAGE_CONTAINER_VOYAGE FOREIGN KEY ([VOYAGE_ID]) REFERENCES [VOYAGE]([ID]);
ALTER TABLE [VOYAGE_CONTAINER] ADD CONSTRAINT FK_VOYAGE_CONTAINER_SHIPPER FOREIGN KEY ([SHIPPER_ID]) REFERENCES [CUSTOMER]([ID]);

ALTER TABLE [VOYAGE_CONTAINER_PACKAGE] ADD CONSTRAINT FK_VOYAGE_CONTAINER_PACKAGE_VOYAGE_CONTAINER FOREIGN KEY ([VOYAGE_CONTAINER_ID]) REFERENCES [VOYAGE_CONTAINER]([ID]);
ALTER TABLE [VOYAGE_CONTAINER_PACKAGE] ADD CONSTRAINT FK_VOYAGE_CONTAINER_PACKAGE_PACKAGE_TYPE FOREIGN KEY ([PACKAGE_TYPE_ID]) REFERENCES [PACKAGE_TYPE]([ID]);
ALTER TABLE [VOYAGE_CONTAINER_PACKAGE] ADD CONSTRAINT FK_VOYAGE_CONTAINER_PACKAGE_CONSIGNEE FOREIGN KEY ([CONSIGNEE_ID]) REFERENCES [CUSTOMER]([ID]);

ALTER TABLE [PACKAGE_CELL_ALLOCATION] ADD CONSTRAINT FK_PACKAGE_CELL_ALLOCATION_VOYAGE_CONTAINER_PACKAGE FOREIGN KEY ([VOYAGE_CONTAINER_PACKAGE_ID]) REFERENCES [VOYAGE_CONTAINER_PACKAGE]([ID]);
ALTER TABLE [PACKAGE_CELL_ALLOCATION] ADD CONSTRAINT FK_PACKAGE_CELL_ALLOCATION_CELL FOREIGN KEY ([CELL_ID]) REFERENCES [CELL]([ROWGUID]);

ALTER TABLE [CELL] ADD CONSTRAINT FK_CELL_BLOCK FOREIGN KEY ([BLOCK_ID]) REFERENCES [BLOCK]([ID]);

ALTER TABLE [BLOCK] ADD CONSTRAINT FK_BLOCK_WAREHOUSE FOREIGN KEY ([WAREHOUSE_ID]) REFERENCES [WAREHOUSE]([ID]);

ALTER TABLE [USER] ADD CONSTRAINT FK_USER_ROLE FOREIGN KEY ([ROLE_ID]) REFERENCES [ROLE]([ID]);

ALTER TABLE [ROLE_PERMISSION] ADD CONSTRAINT FK_ROLE_PERMISSION_ROLE FOREIGN KEY ([ROLE_ID]) REFERENCES [ROLE]([ID]);
ALTER TABLE [ROLE_PERMISSION] ADD CONSTRAINT FK_ROLE_PERMISSION_MENU FOREIGN KEY ([MENU_ID]) REFERENCES [MENU]([ID]);

ALTER TABLE [MENU] ADD CONSTRAINT FK_MENU_PARENT FOREIGN KEY ([PARENT_ID]) REFERENCES [MENU]([ID]);

ALTER TABLE [CUSTOMER] ADD CONSTRAINT FK_CUSTOMER_USER FOREIGN KEY ([USERNAME]) REFERENCES [USER]([USERNAME]);

ALTER TABLE [IMPORT_ORDER] ADD CONSTRAINT FK_IMPORT_ORDER_PAYMENT FOREIGN KEY ([PAYMENT_ID]) REFERENCES [IMPORT_ORDER_PAYMENT]([ID]);

ALTER TABLE [IMPORT_ORDER_DETAIL] ADD CONSTRAINT FK_IMPORT_ORDER_DETAIL_ORDER FOREIGN KEY ([ORDER_ID]) REFERENCES [IMPORT_ORDER]([ID]);
ALTER TABLE [IMPORT_ORDER_DETAIL] ADD CONSTRAINT FK_IMPORT_ORDER_DETAIL_VOYAGE_CONTAINER FOREIGN KEY ([VOYAGE_CONTAINER_ID]) REFERENCES [VOYAGE_CONTAINER]([ID]);
ALTER TABLE [IMPORT_ORDER_DETAIL] ADD CONSTRAINT FK_IMPORT_ORDER_DETAIL_CONTAINER_TARIFF FOREIGN KEY ([CONTAINER_TARIFF_ID]) REFERENCES [CONTAINER_TARIFF]([ID]);

ALTER TABLE [EXPORT_ORDER] ADD CONSTRAINT FK_EXPORT_ORDER_PAYMENT FOREIGN KEY ([PAYMENT_ID]) REFERENCES [EXPORT_ORDER_PAYMENT]([ID]);
ALTER TABLE [EXPORT_ORDER] ADD CONSTRAINT FK_EXPORT_ORDER_PACKAGE_TARIFF FOREIGN KEY ([PACKAGE_TARIFF_ID]) REFERENCES [PACKAGE_TARIFF]([ID]);

ALTER TABLE [EXPORT_ORDER_DETAIL] ADD CONSTRAINT FK_EXPORT_ORDER_DETAIL_ORDER FOREIGN KEY ([ORDER_ID]) REFERENCES [EXPORT_ORDER]([ID]);
ALTER TABLE [EXPORT_ORDER_DETAIL] ADD CONSTRAINT FK_EXPORT_ORDER_DETAIL_VOYAGE_CONTAINER_PACKAGE FOREIGN KEY ([VOYAGE_CONTAINER_PACKAGE_ID]) REFERENCES [VOYAGE_CONTAINER_PACKAGE]([ID]);

ALTER TABLE [PACKAGE_TARIFF_DETAIL] ADD CONSTRAINT FK_PACKAGE_TARIFF_DETAIL_PACKAGE_TARIFF FOREIGN KEY ([PACKAGE_TARIFF_ID]) REFERENCES [PACKAGE_TARIFF]([ID]);
ALTER TABLE [PACKAGE_TARIFF_DETAIL] ADD CONSTRAINT FK_PACKAGE_TARIFF_DETAIL_PACKAGE_TYPE FOREIGN KEY ([PACKAGE_TYPE_ID]) REFERENCES [PACKAGE_TYPE]([ID]);

-- Existing script remains the same...

-- Add Foreign Key Constraints for CREATED_BY and UPDATED_BY
ALTER TABLE [VOYAGE]
ADD CONSTRAINT FK_VOYAGE_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [VOYAGE]
ADD CONSTRAINT FK_VOYAGE_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [VOYAGE_CONTAINER]
ADD CONSTRAINT FK_VOYAGE_CONTAINER_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [VOYAGE_CONTAINER]
ADD CONSTRAINT FK_VOYAGE_CONTAINER_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [VOYAGE_CONTAINER_PACKAGE]
ADD CONSTRAINT FK_VOYAGE_CONTAINER_PACKAGE_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [VOYAGE_CONTAINER_PACKAGE]
ADD CONSTRAINT FK_VOYAGE_CONTAINER_PACKAGE_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [PACKAGE_CELL_ALLOCATION]
ADD CONSTRAINT FK_PACKAGE_CELL_ALLOCATION_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [PACKAGE_CELL_ALLOCATION]
ADD CONSTRAINT FK_PACKAGE_CELL_ALLOCATION_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [CELL]
ADD CONSTRAINT FK_CELL_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [CELL]
ADD CONSTRAINT FK_CELL_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [BLOCK]
ADD CONSTRAINT FK_BLOCK_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [BLOCK]
ADD CONSTRAINT FK_BLOCK_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [WAREHOUSE]
ADD CONSTRAINT FK_WAREHOUSE_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [WAREHOUSE]
ADD CONSTRAINT FK_WAREHOUSE_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [USER]
ADD CONSTRAINT FK_USER_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [USER]
ADD CONSTRAINT FK_USER_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [ROLE]
ADD CONSTRAINT FK_ROLE_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [ROLE]
ADD CONSTRAINT FK_ROLE_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [ROLE_PERMISSION]
ADD CONSTRAINT FK_ROLE_PERMISSION_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [ROLE_PERMISSION]
ADD CONSTRAINT FK_ROLE_PERMISSION_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [MENU]
ADD CONSTRAINT FK_MENU_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [MENU]
ADD CONSTRAINT FK_MENU_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [CUSTOMER]
ADD CONSTRAINT FK_CUSTOMER_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [CUSTOMER]
ADD CONSTRAINT FK_CUSTOMER_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [IMPORT_ORDER]
ADD CONSTRAINT FK_IMPORT_ORDER_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [IMPORT_ORDER]
ADD CONSTRAINT FK_IMPORT_ORDER_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [IMPORT_ORDER_DETAIL]
ADD CONSTRAINT FK_IMPORT_ORDER_DETAIL_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [IMPORT_ORDER_DETAIL]
ADD CONSTRAINT FK_IMPORT_ORDER_DETAIL_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [IMPORT_ORDER_PAYMENT]
ADD CONSTRAINT FK_IMPORT_ORDER_PAYMENT_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [IMPORT_ORDER_PAYMENT]
ADD CONSTRAINT FK_IMPORT_ORDER_PAYMENT_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [IMPORT_ORDER_PAYMENT]
ADD CONSTRAINT FK_IMPORT_ORDER_PAYMENT_CANCELLED_BY FOREIGN KEY (CANCELLED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [EXPORT_ORDER]
ADD CONSTRAINT FK_EXPORT_ORDER_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [EXPORT_ORDER]
ADD CONSTRAINT FK_EXPORT_ORDER_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [EXPORT_ORDER_DETAIL]
ADD CONSTRAINT FK_EXPORT_ORDER_DETAIL_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [EXPORT_ORDER_DETAIL]
ADD CONSTRAINT FK_EXPORT_ORDER_DETAIL_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [EXPORT_ORDER_PAYMENT]
ADD CONSTRAINT FK_EXPORT_ORDER_PAYMENT_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [EXPORT_ORDER_PAYMENT]
ADD CONSTRAINT FK_EXPORT_ORDER_PAYMENT_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [EXPORT_ORDER_PAYMENT]
ADD CONSTRAINT FK_EXPORT_ORDER_PAYMENT_CANCELLED_BY FOREIGN KEY (CANCELLED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [PACKAGE_TYPE]
ADD CONSTRAINT FK_PACKAGE_TYPE_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [PACKAGE_TYPE]
ADD CONSTRAINT FK_PACKAGE_TYPE_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [PACKAGE_TARIFF]
ADD CONSTRAINT FK_PACKAGE_TARIFF_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [PACKAGE_TARIFF]
ADD CONSTRAINT FK_PACKAGE_TARIFF_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [PACKAGE_TARIFF_DETAIL]
ADD CONSTRAINT FK_PACKAGE_TARIFF_DETAIL_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [PACKAGE_TARIFF_DETAIL]
ADD CONSTRAINT FK_PACKAGE_TARIFF_DETAIL_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);

ALTER TABLE [CONTAINER_TARIFF]
ADD CONSTRAINT FK_CONTAINER_TARIFF_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES [USER](USERNAME);
ALTER TABLE [CONTAINER_TARIFF]
ADD CONSTRAINT FK_CONTAINER_TARIFF_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES [USER](USERNAME);